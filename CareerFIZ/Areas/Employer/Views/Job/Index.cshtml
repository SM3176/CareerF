@model IEnumerable<CareerFIZ.Models.Job>
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Http
@inject SignInManager<AppUser> signInManager
@inject UserManager<AppUser> userManager

@{
    var user = await userManager.GetUserAsync(User);
    ViewData["Title"] = "Job";
}

<div class="content-wrapper">
    <div class="row">
        <div class="col-lg-12 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <p class="card-description">
                        <a class="btn btn-primary" href="/employer/job/@user.Id/create">Add new job</a>
                    </p>
                    <form id="filterForm">
                        <div class="row justify-content-center form-wrap">
                            <div class="col-lg-4 form-cols">
                                <input type="text" class="form-control" id="JobName" placeholder="Enter Job Name" name="q" />
                            </div>
                            <div class="col-lg-2 form-cols">
                                <button type="submit" class="btn btn-info">
                                    <span class="lnr lnr-magnifier"></span> Filter
                                </button>                                
                            </div>
                            <div class="col-lg-2 form-cols">
                            <button type="button" class="btn btn-danger" onclick="clearFilter()">
                                <span class="lnr lnr-cross-circle"></span> Clear Filter
                            </button>
                            </div>
                        </div>
                    </form>
                    
                    <form asp-action="DeleteSelected" method="post">
                        <input type="submit" id="deleteButton" class="btn btn-danger" value="Delete Selected" onclick="return confirm('Confirm deletion of the selected sections?') " />

                        @section Scripts {
                            <script>
                                $(function () {
                                    $('#checkall').change(function () {
                                        if ($(this).prop("checked")) {
                                            $("tr:visible input[name=listDelete]").prop("checked", true);
                                        } else {
                                            $("tr:visible input[name=listDelete]").prop("checked", false);
                                        }
                                        toggleDeleteButton();
                                    });

                                    // Function to toggle the deleteButton
                                    $("input[name=listDelete]").change(function () {
                                        toggleDeleteButton();
                                    });

                                    function toggleDeleteButton() {
                                        if ($("input[name=listDelete]:checked").length > 0) {
                                            $('#deleteButton').prop('disabled', false);
                                        } else {
                                            $('#deleteButton').prop('disabled', true);
                                        }
                                    }

                                    // Trigger the initial state of deleteButton
                                    toggleDeleteButton();
                                });
                            </script>
                        }                                               
                            
                        <div class="table-responsive">
                            <table class="table table-striped table-bordered" style="text-align: center">
                                <thead>
                                    <tr>
                                        <th>
                                            <input type="checkbox" id="checkall" />
                                        </th>
                                        <th>@Html.DisplayNameFor(model => model.Name)</th>
                                        <th>@Html.DisplayNameFor(model => model.CreateDate)</th>
                                        <th>@Html.DisplayNameFor(model => model.Province)</th>
                                        <th>@Html.DisplayNameFor(model => model.Time)</th>
                                        <th>@Html.DisplayNameFor(model => model.Skills)</th>
                                        <th>@Html.DisplayNameFor(model => model.Title)</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        if(Model != null){
                                            foreach (var job in Model)
                                            {
                                                <tr>
                                                    <td>
                                                        <input type="checkbox" name="listDelete" value="@job.Id" />
                                                    </td>
                                                    <td>@Html.DisplayFor(modelJob => job.Name)</td>
                                                    <td>@Html.DisplayFor(modelJob => job.CreateDate)</td>
                                                    <td>@Html.DisplayFor(modelJob => job.Province.Name)</td>
                                                    <td>@Html.DisplayFor(modelJob => job.Time.Name)</td>
                                                    <td>@Html.Raw(string.Join(", ", job.Skills.Select(skill => skill.Name)))</td>
                                                    <td>@Html.DisplayFor(modelJob => job.Title.Name)</td>
                                                    <td>
                                                        <a style="color: blue" href="/employer/job/@job.Id/update">Update</a> |
                                                        <a style="color: red" href="#" onclick="onDelete(@job.Id)">Delete</a>
                                                    </td>
                                                </tr>
                                            }
                                        }
                                        else
                                        {
                                            <tr>
                                            <td>hello</td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                        <!--Page list-->
                        <div class="text-center">
                            <ul class="pagination">
                                @Html.PagedListPager((IPagedList)Model, page =>
                                Url.Action("Index", new { page }),
                                new PagedListRenderOptions
                                {
                                Display = PagedListDisplayMode.IfNeeded,
                                LiElementClasses = new string[] { "page-item" },
                                UlElementClasses = new string[] { "pagination" },
                                PageClasses = new string[] { "page-link" },
                                MaximumPageNumbersToDisplay = 7, // Maximum number of pages displayed
                                LinkToPreviousPageFormat = "<span aria-hidden=\"true\">&lsaquo;</span>",
                                LinkToNextPageFormat = "<span aria-hidden=\"true\">&rsaquo;</span>",
                                LinkToFirstPageFormat = "<span aria-hidden=\"true\">&lsaquo;&lsaquo;</span>",
                                LinkToLastPageFormat = "<span aria-hidden=\"true\">&rsaquo;&rsaquo;</span>"
                                })
                            </ul>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    input.btn.btn-danger {
        position: absolute;
        right: 25px;
        top: 25px;
    }

    th {
        font-weight: 700 !important
    }

    .pagination {
        list-style-type: none;
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 20px;
    }
    
    .pagination li {
        margin: 0 5px;
    }

    .pagination li a {
        display: inline-block;
        padding: 5px 10px;
        border: 1px solid #ccc;
        color: #333;
        text-decoration: none;
        border-radius: 5px;
    }

    .pagination li.active a {
        background-color: #333;
        color: #fff;
    }
</style>

<script>
    function onDelete(id) {
        Swal.fire({
            title: 'Delete this job?',
            text: "Are you sure to delete this job?",
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Confirm'
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = '/employer/job/' + id + '/delete';
                Swal.fire(
                    'Delete!',
                    '',
                    'success'
                )
            }
        })
    }
    document.getElementById("filterForm").addEventListener("submit", function (event) {
        event.preventDefault(); // prevent form submission
        applyFilter();
    });

    function applyFilter() {
        var jobName = document.getElementById("JobName").value.trim().toLowerCase();
        var rows = document.getElementsByTagName("tr");

        for (var i = 0; i < rows.length; i++) {
            var jobNameCell = rows[i].getElementsByTagName("td")[1]; // assuming JobName is the second column
            if (jobNameCell) {
                var jobNameText = jobNameCell.textContent || jobNameCell.innerText;
                var row = rows[i];
                if (jobName === "" || jobNameText.toLowerCase().includes(jobName)) {
                    row.style.display = ""; // show matching rows
                } else {
                    row.style.display = "none"; // hide non-matching rows
                }
            }
        }
    }

    function clearFilter() {
        document.getElementById("JobName").value = ""; // clear the input field

        var rows = document.getElementsByTagName("tr");
        for (var i = 0; i < rows.length; i++) {
            rows[i].style.display = ""; // show all rows
        }
    }
</script>